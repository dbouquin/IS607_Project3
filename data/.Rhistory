tally(group_by(gender,reclined))
tidyrider %>%
group_by(reclined, gender) %>%
tally(sort = TRUE)
str(tidyrider)
tidyrider %>%
group_by(reclined, totalinches > '70') %>%
tally(sort = TRUE)
tidyrider %>%
filter(gender = "Male") %>%
group_by(reclined, totalinches > '70') %>%
tally(sort = TRUE)
tidyrider %>%
filter(gender == "Male") %>%
group_by(reclined, totalinches > '70') %>%
tally(sort = TRUE)
tidyrider %>%
filter(gender == "Female") %>%
group_by(reclined, totalinches > '66') %>%
tally(sort = TRUE)
tidyrider %>%
filter(gender == "Male") %>%
summarise(mean(reclined))
tidyrider %>%
filter(gender == "Male") %>%
group_by(totalinches >'70') %>%
summarise(mean(reclined))
tidyrider %>%
filter(gender == "Male") %>%
group_by(totalinches >'70') %>%
summarise(sd(reclined))
tidyrider %>%
filter(gender == "Female") %>%
group_by(totalinches >'66') %>%
summarise(sd(reclined))
getwd()
j
tidyrider <-read.csv("C:/Users/Andrew/Desktop/Cuny/Stats/dataprojecttidyrider.csv")
tidyrider <-read.csv("C:/Users/Andrew/Desktop/Cuny/Stats/dataproject/tidyrider.csv")
#Sample size of each male group
tidyrider %>%
filter(gender == "Male") %>%
group_by(reclined, totalinches > '72') %>%
tally(sort = TRUE)
#Average recline of male group
tidyrider %>%
filter(gender == "Male") %>%
group_by(totalinches >'72') %>%
summarise(mean(reclined))
tidyrider %>%
filter(gender == "Male") %>%
group_by(reclined, totalinches > '72') %>%
tally(sort = TRUE)
#Average recline of male group
tidyrider %>%
filter(gender == "Male") %>%
group_by(totalinches >'72') %>%
summarise(mean(reclined))
#Average recline sd of male group
tidyrider %>%
filter(gender == "Male") %>%
group_by(totalinches >'72') %>%
summarise(sd(reclined))
#Sample sizes of each female group
tidyrider %>%
filter(gender == "Female") %>%
group_by(reclined, totalinches > '68') %>%
tally(sort = TRUE)
#Average recline of female group
tidyrider %>%
filter(gender == "Female") %>%
group_by(totalinches >'68') %>%
summarise(mean(reclined))
#Average recline sd of male group
tidyrider %>%
filter(gender == "Female") %>%
group_by(totalinches >'68') %>%
summarise(sd(reclined))
#Sample size of each male group
tidyrider %>%
filter(gender == "Male") %>%
group_by(reclined, totalinches > '71') %>%
tally(sort = TRUE)
#Average recline of male group
tidyrider %>%
filter(gender == "Male") %>%
group_by(totalinches >'71') %>%
summarise(mean(reclined))
#Average recline sd of male group
tidyrider %>%
filter(gender == "Male") %>%
group_by(totalinches >'71') %>%
summarise(sd(reclined))
#Sample sizes of each female group
tidyrider %>%
filter(gender == "Female") %>%
group_by(reclined, totalinches > '67') %>%
tally(sort = TRUE)
#Average recline of female group
tidyrider %>%
filter(gender == "Female") %>%
group_by(totalinches >'67') %>%
summarise(mean(reclined))
#Average recline sd of male group
tidyrider %>%
filter(gender == "Female") %>%
group_by(totalinches >'67') %>%
summarise(sd(reclined))
#Sample sizes of each female group
tidyrider %>%
filter(gender == "Female") %>%
group_by(reclined, totalinches > '66') %>%
tally(sort = TRUE)
#Average recline of female group
tidyrider %>%
filter(gender == "Female") %>%
group_by(totalinches >'66') %>%
summarise(mean(reclined))
#Average recline sd of male group
tidyrider %>%
filter(gender == "Female") %>%
group_by(totalinches >'66') %>%
summarise(sd(reclined))
str(tidyrider)
tidyrider %>%
filter(gender == "Female") %>%
group_by(totalinches >'66') %>%
summarise((sum(reclined==1)/843)
tidyrider %>%
filter(gender == "Female") %>%
group_by(totalinches >'66') %>%
summarise(sum(reclined==1)/843)
tidyrider %>%
filter(gender == "Female") %>%
group_by(totalinches >'66') %>%
summarise((sum(reclined==1))/843)
tidyrider %>%
filter(gender == "Female") %>%
group_by(reclined, totalinches > '66') %>%
tally(sort = TRUE)
tidyrider %>%
filter(gender == "Female") %>%
group_by(totalinches >'66') %>%
summarise((sum(reclined==1))/843)
tidyrider %>%
filter(gender == "Female") %>%
group_by(totalinches >'66') %>%
summarise((sum(reclined==1))(sum(reclined==2))
tidyrider %>%
filter(gender == "Female") %>%
group_by(totalinches >'66') %>%
summarise((sum(reclined==1))(sum(reclined==2)))
tidyrider %>%
filter(gender == "Female") %>%
group_by(totalinches >'66') %>%
summarise((sum(reclined==1))/(sum(reclined==2)))
tidyrider %>%
filter(gender == "Male") %>%
group_by(totalinches >'71') %>%
summarise((sum(reclined==1))/(sum(reclined==2)))
tidyrider %>%
filter(gender == "Male") %>%
group_by(reclined, totalinches > '71') %>%
tally(sort = TRUE)
tidyrider %>%
filter(gender == "Female") %>%
group_by(totalinches >'66') %>%
summarise((sd((sum(reclined==1))/(sum(reclined==2))))
tidyrider %>%
filter(gender == "Female") %>%
group_by(totalinches >'66') %>%
summarise((sd((sum(reclined==1))/(sum(reclined==2)))))
tidyrider %>%
filter(gender == "Female") %>%
group_by(totalinches >'66') %>%
summarise(sd((sum(reclined==1))/(sum(reclined==2))))
filter(gender == "Female") %>%
group_by(totalinches >'66') %>%
summarise(sd(reclined))
tidyrider %>%
filter(gender == "Male") %>%
group_by(totalinches >'71') %>%
summarise(sd(reclined))
str(tidyrider)
tidyrider %>%
filter(gender == "Female") %>%
group_by(totalinches >'66') %>%
summarise((sum(reclined==1))/((sum(reclined==2|1)))
tidyrider %>%
filter(gender == "Female") %>%
group_by(totalinches >'66') %>%
summarise((sum(reclined==1))/((sum(reclined==2|1))))
tidyrider %>%
filter(gender == "Female") %>%
group_by(totalinches >'66') %>%
summarise((sum(reclined==1))/(count(reclined)))
tidyrider %>%
tidyrider
str(tidyrider)
tidyrider %>%
group_by(gender)
#Sample by gender
tidyrider %>%
group_by(gender) %>%
tally(sort = TRUE)
tidyrider %>%
filter(gender == "Male") %>%
group_by(totalinches >'71')
tidyrider %>%
filter(gender == "Male") %>%
group_by(totalinches >'71') %>%
tally(sort = TRUE)
#Sample by Women above and below 5'7"
tidyrider %>%
filter(gender == "Female") %>%
group_by(totalinches > '67')
tidyrider %>%
filter(gender == "Female") %>%
group_by(totalinches > '67') %>%
tally(sort = TRUE)
tidyrider %>%
group_by(gender) %>%
summarize(avgHeight = mean(totalinches))
tidyrider %>%
group_by(gender, recline) %>%
summarize(avgHeight = mean(totalinches))
tidyrider %>%
group_by(gender, reclined) %>%
summarize(avgHeight = mean(totalinches))
tidyrider %>%
group_by(gender) %>%
summarize(avgHeight = mean(totalinches))
tidyrider %>%
group_by(gender, reclined) %>%
summarize(sdHeight = sd(totalinches))
?squareroot
tidyrider %>%
group_by(gender, reclined) %>%
summarize(sdHeight = (sd(totalinches))/sqrt(tally(sort = TRUE)))
tidyrider %>%
group_by(gender, reclined) %>%
summarize(sdHeight = ((sd(totalinches))/sqrt(tally(sort = TRUE))))
library(plotrix)
install.packages("plotrix")
tidyrider %>%
group_by(gender, reclined) %>%
summarize_each(mean, sd, std.error)
tidyrider %>%
group_by(gender, reclined) %>%
summarize_each(funs(mean, sd, std.error))
tidyrider %>%
group_by(gender, reclined) %>%
summarize(std.error)
tidyrider %>%
group_by(gender, reclined) %>%
summarize(funs(std.error))
tidyrider %>%
group_by(gender, reclined) %>%
summarize(funs(std.error(totalinches)))
tidyrider %>%
group_by(gender, reclined) %>%
summarize(std.error(totalinches))
tidyrider %>%
group_by(gender, reclined) %>%
summarize(sd(totalinches))
tidyrider %>%
group_by(gender, reclined) %>%
summarize(sderror(totalinches))
library(plotrix)
tidyrider %>%
group_by(gender, reclined) %>%
summarize(std.error(totalinches))
tidyrider %>%
group_by(gender) %>%
summarize(std.error(totalinches))
tidyrider %>%
group_by(gender, reclined) %>%
summarize(avgHeight = mean(totalinches))
baftadat <- read.csv("https://raw.githubusercontent.com/karenweigandt/IS607/master/BAFTA.csv", strip.white = TRUE, header=TRUE, sep=",")
str(baftadat)
str(baftadat)
head(baftadat)
baftadat[,2:3] <- lapply(obaftadat[,2:3], trimws) #trim fore and aft white spaces (strip.white didn't work very well in read.csv)
baftadat[,2:3] <- lapply(baftadat[,2:3], trimws) #trim fore and aft white spaces (strip.white didn't work very well in read.csv)
baftadat %>% #tidy and re-form data for analysis
gather("Winner","pictures", 2:3)
baftadat %>% #tidy and re-form data for analysis
gather("best_picture","pictures", 2:3) %>%
filter(pictures !="NA") %>%
mutate(won = 1)
baftadat
baftadat$dblwinner[baftadat$Winner2 != "NA"] <- 1
head(baftadat)
baftadat$dblwinner[is.na(baftadat$Winner2)] <- 0
head(baftadat)
baftadat
baftadat %>% #tidy and re-form data for analysis
gather("best_picture","pictures", 2:3)
baftadat %>% #tidy and re-form data for analysis
gather("best_picture","pictures", 2:3) %>%
filter(pictures !="NA")
baftatable <- baftadat %>% #tidy and re-form data for analysis
gather("best_picture","pictures", 2:3) %>%
filter(pictures !="NA") %>%
mutate(best_picture = 1)
baftatable
baftadat
baftatable
write.csv(baftatable, file = "tidybaftabestpicturewinners.csv")
get(wd)
getwd()
setwd("~/GitHub/IS607_Project3/data")
write.csv(baftatable, file = "tidybaftabestpicturewinners.csv")
sdfadat <- read.csv("https://raw.githubusercontent.com/pm0kjp/IS607_Project3/master/data/SDFilmAwards.csv", strip.white = TRUE, header=TRUE, sep=",")
sdfadat
sddat <- read.csv("https://raw.githubusercontent.com/pm0kjp/IS607_Project3/master/data/SDFilmAwards.csv", strip.white = TRUE, header=TRUE, sep=",")
str(sddat)
str(sddat)
sddat[,1:4] <- lapply(baftadat[,1:4], trimws) #trim fore and aft white spaces (strip.white didn't work very well in read.csv)
head(sddat)
sddat[,1:4] <- lapply(sddat[,1:4], trimws) #trim fore and aft white spaces (strip.white didn't work very well in read.csv)
head(sddat)
sddat %>% #tidy and re-form data for analysis
spread("award", "move")
sddat %>% #tidy and re-form data for analysis
spread("Award", "Movie")
oscardat <- read.csv("https://raw.githubusercontent.com/mfarris9505/IS607_Project3/master/data/Combo_Oscar.csv", strip.white = TRUE, header=TRUE, sep=",")
oscardat[,3:11] <- lapply(oscardat[,3:11], trimws) #trim fore and aft white spaces (strip.white didn't work very well in read.csv)
oscardat <- oscardat[,2:11] #remove now defunct data key from csv
oscartable <- oscardat %>% #tidy and re-form data for analysis
gather("won","pictures", 2:10) %>%
spread(won,won) %>%
filter(pictures !="NA")
oscartable[,2:11] <- lapply(oscartable[,2:11], as.character) #coerce columns to character so we can...
oscartable[,3:11][oscartable[,3:11] != "NA"] <- 1 #mark winners as 1's
oscartable[,3:11][is.na(oscartable[,3:11])] <- 0 #mark non-winners as 0's
oscardat
gather("won","pictures", 2:10)
oscardat %>% #tidy and re-form data for analysis
gather("won","pictures", 2:10)
oscardat %>% #tidy and re-form data for analysis
gather("won","pictures", 2:10) %>%
spread(won,won)
sddat %>% #tidy and re-form data for analysis
spread("Award", "Award")
sddat
head(sddat)
sddat %>% #tidy and re-form data for analysis
select(Award, Year, Movie)
sddat %>% #tidy and re-form data for analysis
select(Award, Year, Movie) %>%
spread("Award", "Award"
sddat %>% #tidy and re-form data for analysis
select(Award, Year, Movie) %>%
spread("Award", "Award")
sddat %>% #tidy and re-form data for analysis
select(Award, Year, Movie) %>%
spread(Award, Award)
sddat %>% #tidy and re-form data for analysis
select(Award, Year, Movie) %>%
spread(Award, Award) $>$
separate(year, c(year, tie), -6)
sddat %>% #tidy and re-form data for analysis
select(Award, Year, Movie) %>%
spread(Award, Award) $>$
separate(Year, c(year, tie), -6)
sddat %>% #tidy and re-form data for analysis
select(Award, Year, Movie) %>%
spread(Award, Award) $>$
separate(Year, c(Year, Tie), -6)
sddat %>% #tidy and re-form data for analysis
select(Award, Year, Movie) %>%
spread(Award, Award) $>$
separate(Year, c("Year", "Tie"), -6)
sddat %>% #tidy and re-form data for analysis
select(Award, Year, Movie) %>%
spread(Award, Award) $>$
separate(Year, c("Year", "Tie"), -4)
sddat %>% #tidy and re-form data for analysis
select(Award, Year, Movie) %>%
spread(Award, Award) %>%
separate(Year, c("Year", "Tie"), -4)
sddat %>% #tidy and re-form data for analysis
select(Award, Year, Movie) %>%
spread(Award, Award) %>%
separate(Year, c("Year", "Tie"), 5)
sdtable <- sddat %>% #tidy and re-form data for analysis
select(Award, Year, Movie) %>%
spread(Award, Award) %>%
separate(Year, c("Year", "Tie"), 5)
str(sdtable)
sdtable[,3:11][sdtable[,3:8] != "NA"] <- 1 #mark winners as 1's
sdtable[,3:11][is.na(sdtable[,3:8])] <- 0 #mark non-winners as 0's
sdtable[,3:11]
sdtable[,3:8][sdtable[,3:8] != "NA"] <- 1 #mark winners as 1's
sdtable[,3:8][is.na(sdtable[,3:8])] <- 0 #mark non-winners as 0's
head(sddat)
head(sdtable)
sdtable <- sddat %>% #tidy and re-form data for analysis
select(Award, Year, Movie) %>%
spread(Award, Award) %>%
separate(Year, c("Year", "Tie"), 5) %>%
sdtable[,4:8][sdtable[,4:8] != "NA"] <- 1 #mark winners as 1's
sdtable[,4:8][is.na(sdtable[,4:8])] <- 0 #mark non-winners as 0's
sdtable <- sddat %>% #tidy and re-form data for analysis
select(Award, Year, Movie) %>%
spread(Award, Award) %>%
separate(Year, c("Year", "Tie"), 5)
sdtable[,4:8][sdtable[,4:8] != "NA"] <- 1 #mark winners as 1's
sdtable[,4:8][is.na(sdtable[,4:8])] <- 0 #mark non-winners as 0's
head(sdtable)
?colnames()
?colnames()
sddat <- read.csv("https://raw.githubusercontent.com/pm0kjp/IS607_Project3/master/data/SDFilmAwards.csv", strip.white = TRUE, header=TRUE, sep=",")
head(sddat)
sddat
sddat <- read.csv("https://raw.githubusercontent.com/pm0kjp/IS607_Project3/master/data/SDFilmAwards.csv", strip.white = TRUE, header=TRUE, sep=",")
sddat
sddat <- read.csv("https://raw.githubusercontent.com/pm0kjp/IS607_Project3/master/data/SDFilmAwards.csv", strip.white = TRUE, header=TRUE, sep=",")
sddat
head(sddat)
sddat
n
sddat <- read.csv("https://raw.githubusercontent.com/pm0kjp/IS607_Project3/master/data/SDFilmAwards.csv", strip.white = TRUE, header=TRUE, sep=",")
sddat
sddat <- read.csv("C:/Users/Andrew/Documents/GitHub/IS607_Project3/data/SDFilmAwards.csv", strip.white = TRUE, header=TRUE, sep=",")
sddat
sddat[,1:4] <- lapply(sddat[,1:4], trimws) #trim fore and aft white spaces (strip.white didn't work very well in read.csv)
sddat %>% #tidy and re-form data for analysis
select(Award, Year, Movie) %>%
spread(Award, Award) %>%
separate(Year, c("Year", "Tie"), 5)
colnames(sdtable) <- c("year", "tie", "movie", "best_actor", "best_actress", "best_film", "best_cinematography", "best_director", "best_editing")
colnames(sdtable) <- c("year", "tie", "movie", "best_actor", "best_actress", "best_film", "best_cinematography", "best_director", "best_editing")
str(sdtable)
sddat <- read.csv("C:/Users/Andrew/Documents/GitHub/IS607_Project3/data/SDFilmAwards.csv", strip.white = TRUE, header=TRUE, sep=",")
sddat[,1:4] <- lapply(sddat[,1:4], trimws) #trim fore and aft white spaces (strip.white didn't work very well in read.csv)
sddat
sdtable <- sddat %>% #tidy and re-form data for analysis
select(Award, Year, Movie) %>%
spread(Award, Award) %>%
separate(Year, c("Year", "Tie"), 5)
str(sdtable)
sdtable[,4:8][sdtable[,4:9] != "NA"] <- 1 #mark winners as 1's
sdtable[,4:8][is.na(sdtable[,4:9])] <- 0 #mark non-winners as 0's
sdtable[,4:9][sdtable[,4:9] != "NA"] <- 1 #mark winners as 1's
sdtable[,4:9][is.na(sdtable[,4:9])] <- 0 #mark non-winners as 0's
colnames(sdtable) <- c("year", "tie", "movie", "best_actor", "best_actress", "best_film", "best_cinematography", "best_director", "best_editing")
sddat %>% #tidy and re-form data for analysis
select(Award, Year, Movie) %>%
spread(Award, Award) %>%
separate(Year, c("Year", "Tie"), 5)
sddat %>% #tidy and re-form data for analysis
select(Award, Year, Movie) %>%
spread(Award, Award) %>%
separate(Year, c("Year", "Tie"), 5) %>%
select(Year, Movie, "Best Actress", "Best Film", "Cinemtography", "Directors", "Editing")
sddat %>% #tidy and re-form data for analysis
select(Award, Year, Movie) %>%
spread(Award, Award) %>%
separate(Year, c("Year", "Tie"), 5) %>%
select(Year, Movie, `Best Actress`, "Best Film", "Cinemtography", "Directors", "Editing")
sddat %>% #tidy and re-form data for analysis
select(Award, Year, Movie) %>%
spread(Award, Award) %>%
separate(Year, c("Year", "Tie"), 5) %>%
select(Year, Movie, `Best Actress`, `Best Film`, Cinemtography, Directors, Editing)
sdtable <- sddat %>% #tidy and re-form data for analysis
select(Award, Year, Movie) %>%
spread(Award, Award) %>%
separate(Year, c("Year", "Tie"), 5) %>%
select(Year, Movie, `Best Actress`, `Best Film`, Cinemtography, Directors, Editing)
str(sdtable)
sdtable <- sddat %>% #tidy and re-form data for analysis
select(Award, Year, Movie) %>%
spread(Award, Award) %>%
separate(Year, c("Year", "Tie"), 5) %>%
select(Year, Movie, `Best Actor`, `Best Actress`, `Best Film`, Cinemtography, Directors, Editing)
str(sdtable)
sdtable[,3:8][sdtable[,3:8] != "NA"] <- 1 #mark winners as 1's
sdtable[,3:8][is.na(sdtable[,3:8])] <- 0 #mark non-winners as 0's
colnames(sdtable) <- c("year", "tie", "movie", "best_actor", "best_actress", "best_film", "best_cinematography", "best_director", "best_editing")
sdtable[,3:8][sdtable[,3:8] != "NA"] <- 1 #mark winners as 1's
sdtable[,3:8][is.na(sdtable[,3:8])] <- 0 #mark non-winners as 0's
colnames(sdtable) <- c("year" "movie", "best_actor", "best_actress", "best_film", "best_cinematography", "best_director", "best_editing")
sddat <- read.csv("C:/Users/Andrew/Documents/GitHub/IS607_Project3/data/SDFilmAwards.csv", strip.white = TRUE, header=TRUE, sep=",")
sddat[,1:4] <- lapply(sddat[,1:4], trimws) #trim fore and aft white spaces (strip.white didn't work very well in read.csv)
sddat
sdtable <- sddat %>% #tidy and re-form data for analysis
select(Award, Year, Movie) %>%
spread(Award, Award) %>%
separate(Year, c("Year", "Tie"), 5) %>%
select(Year, Movie, `Best Actor`, `Best Actress`, `Best Film`, Cinemtography, Directors, Editing)
sdtable[,3:8][sdtable[,3:8] != "NA"] <- 1 #mark winners as 1's
sdtable[,3:8][is.na(sdtable[,3:8])] <- 0 #mark non-winners as 0's
colnames(sdtable) <- c("year", "movie", "best_actor", "best_actress", "best_film", "best_cinematography", "best_director", "best_editing")
head(sdtable)
library(dplyr)
library(tidyr)
library(stringr)
sddat <- read.csv("C:/Users/Andrew/Documents/GitHub/IS607_Project3/data/SDFilmAwards.csv", strip.white = TRUE, header=TRUE, sep=",")
sddat[,1:4] <- lapply(sddat[,1:4], trimws) #trim fore and aft white spaces (strip.white didn't work very well in read.csv)
sddat
sdtable <- sddat %>% #tidy and re-form data for analysis
select(Award, Year, Movie) %>%
spread(Award, Award) %>%
separate(Year, c("Year", "Tie"), 5) %>%
select(Year, Movie, `Best Actor`, `Best Actress`, `Best Film`, Cinemtography, Directors, Editing)
sdtable[,3:8][sdtable[,3:8] != "NA"] <- 1 #mark winners as 1's
sdtable[,3:8][is.na(sdtable[,3:8])] <- 0 #mark non-winners as 0's
colnames(sdtable) <- c("year", "movie", "best_actor", "best_actress", "best_film", "best_cinematography", "best_director", "best_editing")
write.csv(sdtable, file = "tidysdfcsawinners.csv")
